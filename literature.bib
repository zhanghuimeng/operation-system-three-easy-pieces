@misc{CK_08,
  TITLE = {xv6 Operating System},
  AUTHOR = {Russ Cox, Frans Kaashoek, Robert Morris, Nickolai Zeldovich},
  YEAR = {2008},
  URL = {http://pdos.csail.mit.edu/6.828/2008/index.html},
  NOTE = {xv6是作为UNIX版本6的接口开发的，代表着一种优美、清洁、简单地理解现代操作系统的方式。}
}

@misc{F96,
  TITLE = {费曼物理学讲义},
  AUTHOR = {Richard P. Feynman},
  HOWPUBLISHED = {Basic Books},
  YEAR = {1996},
  NOTE = {这本书重印了费曼1963年的物理学讲义中最简单的六章。如果你喜欢物理，这是一本非常有趣的书。}
}

@misc{HP90,
  TITLE = {计算机体系结构：量化研究方法（第一版）},
  AUTHOR = {David A. Patterson and John L. Hennessy},
  HOWPUBLISHED = {Morgan-Kaufman},
  YEAR = {1990},
  NOTE = {这本书在我们本科时鼓励了我们继续读研；之后我们都有幸与Patterson共事，他为我们的研究生涯奠定了基础。}
}

@misc{KR88,
  TITLE = {C程序设计语言},
  AUTHOR = {Brian Kernighan and Dennis Ritchie},
  HOWPUBLISHED = {Prentice-Hall},
  YEAR = {1988},
  MONTH = {4},
  NOTE = {由C语言的发明者撰写，是所有人都应阅读的C语言编程指南。}
}

@misc{K62,
  TITLE = {科学革命的结构},
  AUTHOR = {Thomas S. Kuhn},
  HOWPUBLISHED = {University of Chicago Press},
  YEAR = {1962},
  NOTE = {一本关于科学发展史的伟大著作。收尾工作，反常现象，危机和革命。哎呀，我们基本命中注定要做的是收尾工作。}
}



@misc{BS_09,
  TITLE = {Tolerating File-System Mistakes with EnvyFS},
  AUTHOR = {Lakshmi N. Bairavasundaram, Swaminathan Sundararaman, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau},
  HOWPUBLISHED = {USENIX ’09, San Diego, CA},
  YEAR = {2009},
  MONTH = {7}, 
  NOTE = {这是一篇有趣的文章，讲的是如何构建多个文件系统，能够容忍其中任意一个发生的错误。}
}

@misc{BH00,
  TITLE = {"The Evolution of Operating Systems" In "Classic Operating Systems: From Batch Processing to Distributed Systems"},
  AUTHOR = {P. Brinch Hansen},
  HOWPUBLISHED = {Springer-Verlag, New York},
  YEAR = {2000},
  NOTE = {这篇文章提供了一份非常好的与历史上的著名系统相关的论文合集。}
}

@misc{B_72,
  TITLE = {TENEX, A Paged Time Sharing System for the PDP-10},
  AUTHOR = {Daniel G. Bobrow, Jerry D. Burchfiel, Daniel L. Murphy, Raymond S. Tomlinson},
  HOWPUBLISHED = {CACM, Volume 15, Number 3},
  YEAR = {1972},
  MONTH = {3},
  NOTE = {TENEX系统已经实现了现代操作系统中的大部分机制；请阅读更多内容以了解，上世纪70年代早期，操作系统已经发展到了何种程度。}
}

@misc{B75,
  TITLE = {人月神话：软件项目管理之道},
  AUTHOR = {Fred Brooks},
  HOWPUBLISHED = {Addison-Wesley},
  YEAR = {1972},
  NOTE = {软件工程领域的经典著作，值得一读。}
}

@misc{BOH10,
  TITLE = {深入理解计算机系统},
  AUTHOR = {Randal E. Bryant and David R. O’Hallaron},
  HOWPUBLISHED = {Addison-Wesley},
  YEAR = {2010},
  NOTE = {计算机系统结构的另一本优秀入门教材，和本书的内容有一定重复——所以，如果你愿意的话，可以跳过那本书的最后几章，或者略读以获得对相同材料的不同视角。毕竟，逐步建立自己的知识体系的一个好方法就是阅读尽可能多的视角写的东西，然后形成自己的观点和思考。当然，这需要通过思考！}
}

@misc{K_61,
  TITLE = {One-Level Storage System},
  AUTHOR = {T. Kilburn, D.B.G. Edwards, M.J. Lanigan, F.H. Sumner},
  HOWPUBLISHED = {IRE Transactions on Electronic Computers},
  YEAR = {1962},
  MONTH = {4}, 
  NOTE = {Atlas系统实现了很多现代操作系统的特性。然而这篇论文并不是最好的。如果你只想读一篇文章，那么请阅读下面的那篇历史回顾。}
}

@misc{L78,
  TITLE = {The Manchester Mark I and Atlas: A Historical Perspective},
  AUTHOR = {S. H. Lavington},
  HOWPUBLISHED = {Communications of the ACM archive, Volume 21, Issue 1, pages 4-12},
  YEAR = {1978},
  MONTH = {1}, 
  NOTE = {一篇关于操作系统的早期发展和作为先驱的Altas系统的优秀历史论文。当然，你可以直接阅读Atlas的作者写的论文，但这篇论文是一篇很棒的回顾，而且还有一些历史回顾。}
}

@misc{O72,
  TITLE = {The Multics System: An Examination of its Structure},
  AUTHOR = {Elliott Organick},
  YEAR = {1972},
  NOTE = {一篇很好的对Multics操作系统的简介。这一系统中有很多好的思想，然而它过度设计了，想要达成的事情过多，因此从未以期望的方式工作。Fred Brooks称之为“第二系统效应”（second-system effect）的经典例子。}
}

@misc{PP03,
  TITLE = {计算机系统概论},
  AUTHOR = {Yale N. Patt and Sanjay J. Patel},
  YEAR = {2003},
  NOTE = {我们最喜欢的操作系统介绍读物之一。从晶体管开始，一路介绍到C语言；早期的材料特别好。}
}

@misc{RT74,
  TITLE = {The UNIX Time-Sharing System},
  AUTHOR = {Dennis M. Ritchie and Ken Thompson},
  HOWPUBLISHED = {CACM, Volume 17, pages 365-375},
  YEAR = {1974},
  MONTH = {11},
  NOTE = {UNIX的作者在UNIX席卷世界时对它的优秀总结。}
}

@misc{S_68,
  TITLE = {SDS 940 Time-Sharing System},
  AUTHOR = {Scientific Data Systems Inc.},
  HOWPUBLISHED = {TECHNICAL MANUAL, SDS 90 11168},
  URL = {http://goo.gl/EN0Zrn},
  YEAR = {1968},
  MONTH = {8},
  NOTE = {我们能找到的最好材料知识一份技术文档，但阅读这些旧的系统文档非常有趣，可以看到，在上世纪60年代末，操作系统已经发展到了何种程度。伯克利分时系统（它最终成为了SDS系统）的作者之一是Butler Lampson，他后来因对操作系统的贡献获得了图灵奖。}
}

@misc{SS_10,
  TITLE = {Membrane: Operating System Support for Restartable File Systems},
  AUTHOR = {Swaminathan Sundararaman, Sriram Subramanian, Abhishek Rajimwale, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau, Michael M. Swift},
  HOWPUBLISHED = {FAST ’10, San Jose, CA},
  YEAR = {2010},
  MONTH = {2},
  NOTE = {撰写自己的教科书的优势之一是，可以在里面推广你自己的研究。但这篇文章实际上非常简洁：当文件系统出现bug而崩溃是，Membrane会魔法般地自动重启它，不会影响到系统中其余的应用。}
}
